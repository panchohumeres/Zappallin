version: "3"

services:

  jupyter:
    #build:
    #  context: ./jupyter
    image: jupyter/all-spark-notebook
    container_name: jupyter
    ports:
      - ${JUPYTER_PORT}:8888 #default 8888
    #environment:
      #- NB_UID=1002 #change to host user id in case it's not 1000
      #- POSTGRES_DB=$POSTGRES_DB
      #- DB_NAME=$DB_NAME
     # - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
     # - POSTGRES_PORT=${POSTGRES_PORT}
     # - POSTGRES_USER=$POSTGRES_USER
     # - PASSWORD=$JUPYTER_PSSWD
     # - JUPYTER_ALLOW_ORIGIN=$JUPYTER_ALLOW_ORIGIN
      #- S3_ACCESS_KEY=$S3_ACCESS_KEY
      #- S3_SECRET_KEY=$S3_SECRET_KEY
      #- S3_BUCKET=$S3_BUCKET
      #- MAPBOX_API_KEY=$MAPBOX_API_KEY
      #- MAPBOX_API_UPLOAD_KEY=$MAPBOX_API_UPLOAD_KEY
      #- PLOTLY_USER=$PLOTLY_USER
      #- PLOTLY_API_KEY=$PLOTLY_API_KEY

    #command: /bin/sh -c "/home/jovyan/.jupyter/jupyter-docker-entrypoint.sh"
    volumes:
      - ${PWD}/notebooks:/home/jovyan/work
      #- ${HOST_DATA_PATH}:/data
      - ${HOST_DATA_PATH}/ETLcache:/home/jovyan/work/ETLcache
      - ${PWD}/jupyter:/home/jovyan/.jupyter/
      - ${PWD}/backup_utils:/home/jovyan/work/backup
      - ${PWD}/ETL:/home/jovyan/work/ETL
      - ${PWD}/ETLdocs:/home/jovyan/work/ETLdocs
      #- ${PWD}/CRONTAB:/home/jovyan/work/CRONTAB
      - ${PWD}/modules:/home/jovyan/work/modules
      - ${PWD}/args:/home/jovyan/work/args



  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9010:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    depends_on:
      - namenode
      - datanode
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  spark-worker-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
      - datanode
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql

  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    container_name: presto-coordinator
    ports:
      - "8089:8089"

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:

