version: "3"

services:

  jupyter:
    build:
      context: ./jupyter
      args:
        - spark_version=3.0.0
        - hadoop_version=3.2
        - spark_checksum=BFE45406C67CC4AE00411AD18CC438F51E7D4B6F14EB61E7BF6B5450897C2E8D3AB020152657C0239F253735C263512FFABF538AC5B9FFFA38B8295736A9C387
        - openjdk_version=8  
    container_name: jupyter
    ports:
      - ${JUPYTER_PORT}:8888 #default 8888
      - 10200:10200 # Module REST Port
      - 4041:4040 # Web UI (Spark)
      - 7001:7001 # Driver Port (Spark)
      - 15001:15001 # Broadcast (Spark)
      - 15002:15002 # File Server (Spark)
      - 15003:15003 # Blockmanager (Spark)
      - 7337:7337 # Shuffle? (Spark)


    environment:
      - NB_UID=1002 #change to host user id in case it's not 1000
      - JUPYTER_ALLOW_ORIGIN=$JUPYTER_ALLOW_ORIGIN
      - PASSWORD=$JUPYTER_PSSWD

    #command: /bin/sh -c "/home/jovyan/.jupyter/jupyter-docker-entrypoint.sh"
    volumes:
      - ${PWD}/notebooks:/home/jovyan/work
      - ${HOST_DATA_PATH}:/data
      - ${HOST_DATA_PATH}/ETLcache:/home/jovyan/work/ETLcache
      - ${PWD}/jupyter:/home/jovyan/.jupyter/
      - ${PWD}/backup_utils:/home/jovyan/work/backup
      - ${PWD}/ETL:/home/jovyan/work/ETL
      - ${PWD}/ETLdocs:/home/jovyan/work/ETLdocs
      - ${PWD}/CRONTAB:/home/jovyan/work/CRONTAB
      - ${PWD}/modules:/home/jovyan/work/modules
      - ${PWD}/args:/home/jovyan/work/args



  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - 9870:9870
      - 9010:9000
    volumes:
      - ${HOST_DATA_PATH}/hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    volumes:
      - ${HOST_DATA_PATH}/hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - ${HOST_DATA_PATH}/hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.0.0-hadoop3.2
    container_name: spark-master
    depends_on:
      - namenode
      - datanode
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  spark-worker-1:
    image: bde2020/spark-worker:3.0.0-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000

  spark-worker-2:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    depends_on:
      - namenode
      - datanode
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql

  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    container_name: presto-coordinator
    ports:
      - "8089:8089"